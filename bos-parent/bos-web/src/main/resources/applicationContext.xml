<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:soap="http://cxf.apache.org/bindings/soap" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://cxf.apache.org/bindings/soap 
						http://cxf.apache.org/schemas/configuration/soap.xsd
						http://cxf.apache.org/jaxws 
						http://cxf.apache.org/schemas/jaxws.xsd">
	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- sessionFactory对象 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate的信息 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
			</props>
		</property>
		<!-- 加载映射文件：批量加载映射文件 -->
		<property name="mappingLocations">
			<value>classpath:com/itheima/bos/domain/*.hbm.xml</value>
		</property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 项目中使用注解的方式进行事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 开启组件扫描 -->
	<context:component-scan base-package="com.itheima.bos"></context:component-scan>
	
	<!--开启注解扫描的方式来记录日志  -->
	<aop:aspectj-autoproxy />  
	
	<!-- 注册客户端代理对象
		address:webservice服务的地址 -->
	<jaxws:client id="customerClient"  address="http://192.168.110.101:8989/bos_crm/service/aaa" serviceClass="com.itheima.crm.CustomerService">
	</jaxws:client> 
	
	
	<!-- 配置shiroFilter:过滤器工厂：产生过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 配置相关页面 -->
		<property name="loginUrl" value="/login.jsp"/>
		<property name="successUrl" value="/index.jsp"></property>
		<property name="unauthorizedUrl" value="/unauthorized.jsp"></property>
		<!-- 注入安全管理器 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 注入过滤器链：配置拦截url规则 -->
		<!-- authc：过滤器缩写，代表访问某个请求需要经过shiro框架认证
			anon:匿名过滤器，访问某个页面不需要认证可以匿名访问
			perms:权限验证过滤器，访问某些url，需要当前用户具有什么样的权限 -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/js/** = anon
				/images/** = anon
				/login.jsp = anon
				/message.jsp=anon
				/validatecode.jsp* = anon
				/userAction_login.action = anon
				/userAction_sendMessage.action = anon
				/userAction_saveMessage.action = anon
				/noticebillAction_*.action = anon
				/userAction_updatePwdByUsername.action = anon
				/userAction_findUserByUsername.action = anon
				/* = authc
			</value>
		</property>
	</bean>
	
	
	
	<!-- 配置安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 注入realm -->
		<property name="realm" ref="bosRealm"></property>
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"></property>
	</bean>
	
	<!-- 配置缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 注入ehcache配置文件 -->
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>
	
	<!-- 配置自定义realm -->
	<bean name = "bosRealm" class="com.itheima.realm.BosRealm">
	</bean>
	
	
	<!-- 开启shiro注解扫描 -->
		<!-- 开启对action类自动代理： -->
		<bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
			<!-- 强制对action使用cglib的方式产生代理对象
				false:JDK动态代理：产生接口实现类的代理对象
				true:cglib：产生目标类的子类代理对象 -->
			<property name="proxyTargetClass" value="true"></property>
		</bean>
		<!-- 配置action切面类  切面=切入点+通知 -->
		<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>
	<!-- 开启shiro注解扫描 -->
</beans>